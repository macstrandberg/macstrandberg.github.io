{
  "camelcase"     : true,    // true: Identifiers must be in camelCase
  "curly"         : true,     // true: Require {} for every new block or scope
  "eqeqeq"        : true,     // true: Require triple equals (===) for comparison
  "freeze"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
  "immed"         : true,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
  "indent"        : 2,        // {int} Number of spaces to use for indentation
  "latedef"       : true,    // true: Require variables/functions to be defined before being used
  "newcap"        : true,    // true: Require capitalization of all constructor functions e.g. `new F()`
  "noempty"       : true,     // true: Prohibit use of empty blocks
  "quotmark"      : "single",   // Quotation mark consistency:
                              //   false    : do nothing (default)
                              //   true     : ensure whatever is used is consistent
                              //   "single" : require single quotes
                              //   "double" : require double quotes
  "undef"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)
  "strict"        : true,     // true: Requires all functions run in ES5 Strict Mode
  "asi"           : false,    // true: Tolerate Automatic Semicolon Insertion (no semicolons)
  "esnext"        : true,     // true: Allow ES.next (ES6) syntax (ex: `const`)
  "evil"          : false,     // true: Tolerate use of `eval` and `new Function()`
  "loopfunc"      : false,     // true: Tolerate functions being defined in loops
  "multistr"      : false,     // true: Tolerate multi-line strings
  "notypeof"      : false,     // true: Tolerate invalid typeof operator values
  "shadow"        : true,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
  "globals": {},
}
